{"mappings":"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","sources":["public/js/controller.js","public/js/model.js","public/js/config.js","public/js/views/swiperView.js","public/js/views/paginationView.js","public/js/views/Views.js"],"sourcesContent":["import * as model from './model';\r\nimport swiperView from './views/swiperView';\r\nimport paginationView from './views/paginationView';\r\n\r\n// FIXME: IMPLEMENT ERROR HANDLING\r\n\r\nclass Controller {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  async controlPagination(pageLimit, goToPage) {\r\n    // 1) Get Href for http request and pagination params\r\n    const currentHref = window.location.href;\r\n\r\n    // 2) Send data to server for http request\r\n    await model.loadSearchResultsPage(currentHref, pageLimit, goToPage);\r\n\r\n    // 3) Render NEW results\r\n    paginationView.render(model.state.search);\r\n  }\r\n\r\n  async init() {\r\n    await model.getMetadata();\r\n    paginationView.addHandlerClick(this.controlPagination, model.state.search);\r\n    swiperView.initSwiper();\r\n  }\r\n}\r\n\r\n// if (this.swipers) swiperView.initSwiper(this.swipers);\r\n// if (this.paginationBtns) {\r\n//   paginationView.handlePagination(this.paginationBtns);\r\n// }\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst controller = new Controller();\r\n","import { LOCAL_HOST, METADATA_ENDPOINT } from './config';\r\n\r\nexport const state = {\r\n  search: {\r\n    page: 1,\r\n  },\r\n};\r\n\r\nexport const getMetadata = async function () {\r\n  try {\r\n    // 1) Send HTTP request for metadata\r\n    const response = await fetch(`${LOCAL_HOST}/${METADATA_ENDPOINT}`);\r\n    const data = await response.json();\r\n\r\n    // 2) Asign response to state.search\r\n    state.search.newsCount = data.metadata.newsCount;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const loadSearchResultsPage = async function (\r\n  currentHref,\r\n  limit,\r\n  page = state.search.page,\r\n) {\r\n  try {\r\n    state.search.page = page;\r\n\r\n    // 1) Send HTTP request to server with params for pagination\r\n    const apiUrl = `${currentHref}?page=${page}&limit=${limit}`;\r\n    const response = await fetch(apiUrl, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    // 2) Assign store data into state object\r\n    state.search.results = data.news;\r\n\r\n    // 3)\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","export const LOCAL_HOST = `http://127.0.0.1:8000`;\r\nexport const METADATA_ENDPOINT = `api/v1/metadata`;\r\n","/* eslint-disable no-undef */\r\n\r\n// FIXME: Need to implement card counter - swiper-left starts from last card\r\nclass SwiperView {\r\n  swipers = document.querySelectorAll('.swiper');\r\n\r\n  initSwiper() {\r\n    if (!this.swipers) return;\r\n\r\n    this.swipers.forEach((swiper) => {\r\n      this.swiperScrollbar = swiper.querySelector('.swiper-scrollbar');\r\n      this.swiperPosition = swiper.classList.contains('right-swiper')\r\n        ? 'right'\r\n        : 'left';\r\n\r\n      this.handleSwiper(swiper);\r\n    });\r\n  }\r\n\r\n  handleSwiper(swiper) {\r\n    this.swiperContainer = new Swiper(swiper, {\r\n      direction: 'horizontal',\r\n      centeredSlides: false,\r\n      initialSlide: 0,\r\n      grabCursor: true,\r\n      scrollbar: {\r\n        el: this.swiperScrollbar,\r\n        draggable: true,\r\n        dragSize: 'auto',\r\n      },\r\n      breakpoints: {\r\n        575: {\r\n          slidesPerView: 2,\r\n        },\r\n        768: {\r\n          spaceBetween: 100,\r\n          slidesPerGroup: 2,\r\n        },\r\n        992: {\r\n          spaceBetween: 30,\r\n          slidesPerView: 'auto',\r\n          slidesPerGroup: 1,\r\n        },\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SwiperView();\r\n","import View from './Views';\r\n\r\nclass PaginationView extends View {\r\n  // DOM elements for pagination\r\n  _parentElement = document.querySelector('.news-side-nav--preview');\r\n\r\n  _paginationbtn = document.querySelector('.pagination-buttons');\r\n\r\n  _btnNext = document.querySelector('.btn-pagination--next');\r\n\r\n  _btnPrev = document.querySelector('.btn-pagination--previous');\r\n\r\n  // Number of news items to display per page\r\n  _pageLimit = 5;\r\n\r\n  addHandlerClick(handler, pageData) {\r\n    // 1) Exit the function if no pagination buttons are present\r\n    if (!this._paginationbtn) return;\r\n\r\n    // Store the current page and calculate the total number of pages\r\n    this._currentPage = pageData.page;\r\n    this.numPages = Math.ceil((pageData.newsCount - 1) / this._pageLimit);\r\n\r\n    // Configure the initial state of pagination buttons\r\n    this.configPaginationButtons();\r\n\r\n    // 2) Listen for click event\r\n    this._paginationbtn.addEventListener('click', (e) => {\r\n      // Find the clicked button element\r\n      const clickedBtn = e.target.closest('.btn-pagination');\r\n      if (!clickedBtn) return;\r\n\r\n      // Update the current page based on the button clicked\r\n      if (clickedBtn.classList.contains('btn-pagination--next')) {\r\n        this._currentPage += 1;\r\n      } else {\r\n        this._currentPage -= 1;\r\n      }\r\n\r\n      // 3) Invoke the provided handler with updated page and limit information\r\n      handler(this._pageLimit, this._currentPage);\r\n    });\r\n  }\r\n\r\n  configPaginationButtons() {\r\n    // Page 1, with more pages available\r\n    if (this._currentPage === 1 && this.numPages > 1) {\r\n      this._btnPrev.classList.add('disabled');\r\n      this._btnNext.classList.add('enabled');\r\n    }\r\n\r\n    // Page 1, with no additional pages\r\n    if (this._currentPage === 1 && this.numPages === 1) {\r\n      this._btnPrev.classList.add('hidden');\r\n      this._btnNext.classList.add('hidden');\r\n    }\r\n\r\n    // Pages between the first and last\r\n    if (this._currentPage > 1 && this._currentPage < this.numPages) {\r\n      this._btnPrev.classList.replace('disabled', 'enabled');\r\n      this._btnNext.classList.replace('disabled', 'enabled');\r\n    }\r\n\r\n    // Last page, with more than one page in total\r\n    if (this._currentPage === this.numPages && this.numPages > 1) {\r\n      this._btnNext.classList.add('disabled');\r\n    }\r\n  }\r\n\r\n  _generateMarkup() {\r\n    // Configure the state of pagination buttons\r\n\r\n    this.configPaginationButtons();\r\n\r\n    // Generate and return markup for rendering news items\r\n    const html = this._data.results.map(\r\n      (news) => `\r\n      <a href=\"${news.slug}\"> \r\n        <div class=\"news-box row\"> \r\n          <div class=\"col-6\">\r\n            <div class=\"news-description\">\r\n              <p class=\"news-title--mini\"> ${news.title} </p>\r\n              <p class=\"publish-date mt-3\">${news.publishDate}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"news-box-img--container\">\r\n              <img class=\"news-box-img\" src=\"/images/news/${news.coverImg}.jpg\" alt=\"${news.title}\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>`,\r\n    );\r\n\r\n    return html.join('');\r\n  }\r\n}\r\n\r\nexport default new PaginationView();\r\n","export default class View {\r\n  _data;\r\n\r\n  render(data) {\r\n    // 1) Exit the function if data is null\r\n    if (!data) return;\r\n    this._data = data;\r\n\r\n    console.log(this._data);\r\n\r\n    // 2)\r\n    const markup = this._generateMarkup();\r\n\r\n    // 3) Clear parent Element before inserting HTML\r\n    this.clear();\r\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n\r\n  clear() {\r\n    this._parentElement.innerHTML = '';\r\n  }\r\n}\r\n"],"names":["model","swiperView","paginationView","Controller","constructor","init","controlPagination","pageLimit","goToPage","currentHref","window","location","href","loadSearchResultsPage","render","state","search","getMetadata","addHandlerClick","initSwiper","controller","LOCAL_HOST","METADATA_ENDPOINT","page","response","fetch","data","json","newsCount","metadata","err","console","log","limit","apiUrl","headers","Accept","results","news","SwiperView","swipers","document","querySelectorAll","forEach","swiper","swiperScrollbar","querySelector","swiperPosition","classList","contains","handleSwiper","swiperContainer","Swiper","direction","centeredSlides","initialSlide","grabCursor","scrollbar","el","draggable","dragSize","breakpoints","slidesPerView","spaceBetween","slidesPerGroup","View","PaginationView","_parentElement","_paginationbtn","_btnNext","_btnPrev","_pageLimit","handler","pageData","_currentPage","numPages","Math","ceil","configPaginationButtons","addEventListener","e","clickedBtn","target","closest","add","replace","_generateMarkup","html","_data","map","slug","title","publishDate","coverImg","join","markup","clear","insertAdjacentHTML","innerHTML"],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}